/*
Return the pre-order tree traversal of N-ary tree. You are given the root 
of the tree.
Note: Use Iterative approach.

Input=12
1 3 5 -1 6 -1 -1 2 -1 4 -1 -1

       1
     / | \
    3  2  4
   / \
  5   6
  
Output=[1, 3, 5, 6, 2, 4]

Solution.java
/*
class TreeNode
{
    int data;
    List<TreeNode> children = new ArrayList<>();

    TreeNode(int _data)
    {
        data = _data;
    }
}
*/

import java.util.*;
class Solution
{
    List<Integer> list=new ArrayList<>();
    public List<Integer> preOrder(TreeNode root)
    {
	\\IMPLEMENT YOUR CODE HERE
        Stack<TreeNode> s=new Stack<TreeNode>();
        s.add(root);
        while(!s.isEmpty()){
            TreeNode node=s.pop();
            list.add(node.data);
            for(int i=node.children.size()-1;i>-1;i--){
                s.add(node.children.get(i));
            }
        }
        return list;
    }
}
